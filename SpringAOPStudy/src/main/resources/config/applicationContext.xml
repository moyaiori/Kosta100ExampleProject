<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
	
	<!-- Spring AOP 설정 -->
	
	<!-- 핵심 비즈니스 로직에 적용할 공통 기능의 빈 등록 -->
	<bean id="consoleLogger" class="kr.or.kosta.springframework.aop.ConsoleLogger"/>
	
	<!-- aop namespace의 aop 전용태그를 이용한 Aspect 설정 -->
	<aop:config>
		<aop:aspect id="consoleLoggerAspect" ref="consoleLogger">
			<!-- Aspect를 적용할 Pointcut(지점) 설정 -->
			<!--
			 |- Aspect를 적용할 Pointcut(지점) 설정 
			 |- AspectJ Pointcut 표현식을 이용하여 kr.or.kosta.springframework.service 패키지 및 하위 패키지에 있는
			 |- 매개변수가 0개 이상인 메소드를 포인트컷으로 설정
			 |-->
			<aop:pointcut id="serviceMethods" expression="execution(* kr.or.kosta.springframework.service..*.*(..))" />
			<!-- Around Advice 설정 -->
			<aop:around pointcut-ref="serviceMethods" method="log" />
		</aop:aspect>
	</aop:config>
	
	<!-- 애노테이션 설정이 가능하도록 Annotation 빈 스캐너 설정 -->
	<context:component-scan base-package="kr.or.kosta.springframework"/>
	
</beans>
